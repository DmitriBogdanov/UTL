{
    "version": 3,
    
    "cmakeMinimumRequired": {
        "major": 3,
        "minor": 21,
        "patch": 0
    },
    
    "configurePresets": [
        {
            "name": "base",
            "description": "Common configuration variables.",
            "hidden": true,
            "binaryDir": "build/",
            "cacheVariables": {
                "UTL_COMPILE_FEATURES": "cxx_std_17"
            }
        },
        {
            "name": "gcc",
            "description": "GCC configuration variables.",
            "inherits": [ "base" ],
            "cacheVariables": {
                "CMAKE_CXX_COMPILER": "g++",
                "UTL_TEST_FLAGS": "-O0;-g3;-Wall;-Wextra;-Wpedantic;-Werror;-fsanitize=address,undefined;-fno-sanitize-recover=all;--coverage",
                "UTL_TEST_LINKER_FLAGS": "-fsanitize=address,undefined;--coverage",
                "UTL_BENCHMARK_FLAGS": "-O2;-Wall;-Wextra;-Wpedantic;-Werror",
                "UTL_BENCHMARK_LINKER_FLAGS": ""
            }
        },
        {
            "name": "gcc-tsan",
            "description": "GCC configuration variables (Thread Sanitizer variant).",
            "inherits": [ "gcc" ],
            "cacheVariables": {
                "UTL_TEST_FLAGS": "-O0;-g3;-Wall;-Wextra;-Wpedantic;-Werror;-fsanitize=thread;-fno-sanitize-recover=all",
                "UTL_TEST_LINKER_FLAGS": "-fsanitize=thread",
                "UTL_BENCHMARK_LINKER_FLAGS": ""
            }
        },
        {
            "name": "clang",
            "description": "Clang configuration variables.",
            "inherits": [ "base" ],
            "cacheVariables": {
                "CMAKE_CXX_COMPILER": "clang++",
                "UTL_TEST_FLAGS": "-O0;-g3;-Wall;-Wextra;-Wpedantic;-Werror;-fsanitize=address,undefined;-fno-sanitize-recover=all;--coverage",
                "UTL_TEST_LINKER_FLAGS": "-fsanitize=address,undefined;--coverage",
                "UTL_BENCHMARK_FLAGS": "-O2;-Wall;-Wextra;-Wpedantic;-Werror",
                "UTL_BENCHMARK_LINKER_FLAGS": ""
            }
        },
        {
            "name": "clang-bsd",
            "description": "Clang configuration variables (BSD OS variant).",
            "inherits": [ "clang" ],
            "cacheVariables": {
                "UTL_TEST_LINKER_FLAGS": "-fsanitize=address,undefined;--coverage;-pthread",
                "UTL_BENCHMARK_LINKER_FLAGS": "-pthread"
            }
        },
        {
            "name": "msvc",
            "description": "MSVC configuration variables.",
            "inherits": [ "base" ],
            "cacheVariables": {
                "CMAKE_CXX_FLAGS_DEBUG": "",
                "UTL_TEST_FLAGS": "/W4;/sdl;/WX;/DEBUG;Zi;/RTC1;/permissive-;/Zc:preprocessor",
                "UTL_TEST_LINKER_FLAGS": "",
                "UTL_BENCHMARK_FLAGS": "/O2;/W4;/WX;/permissive-;/Zc:preprocessor"
            }
        }
    ],
    
    "buildPresets": [
        {
            "name": "base",
            "description": "Common build variables.",
            "hidden": true,
            "jobs": 4
        },
        { "name": "gcc"      , "configurePreset": "gcc"      , "inherits": [ "base" ] },
        { "name": "gcc-tsan" , "configurePreset": "gcc-tsan" , "inherits": [ "base" ] },
        { "name": "clang"    , "configurePreset": "clang"    , "inherits": [ "base" ] },
        { "name": "clang-bsd", "configurePreset": "clang-bsd", "inherits": [ "base" ] },
        { "name": "msvc"     , "configurePreset": "msvc"     , "inherits": [ "base" ] }
    ],
    
    "testPresets": [
        {
            "name": "base",
            "description": "CTest arguments",
            "hidden": true,
            "output": {
                "outputOnFailure": true
            },
            "execution": {
                "timeout": 60
            }
        },
        { "name": "gcc"      , "configurePreset": "gcc"      , "inherits": [ "base" ] },
        { "name": "gcc-tsan" , "configurePreset": "gcc-tsan" , "inherits": [ "base" ] },
        { "name": "clang"    , "configurePreset": "clang"    , "inherits": [ "base" ] },
        { "name": "clang-bsd", "configurePreset": "clang-bsd", "inherits": [ "base" ] },
        { "name": "msvc"     , "configurePreset": "msvc"     , "inherits": [ "base" ] }
    ]
}